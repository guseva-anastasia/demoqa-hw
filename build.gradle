plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.12.0'
}

repositories {
    mavenCentral()
}

allure {
    report {
        version.set("2.32.0") //версия Allure Report (https://github.com/allure-framework/allure2)
    }
    adapter {
        aspectjWeaver.set(true) // обработка аннотации @Step
        frameworks {
            junit5 {
                adapterVersion.set("2.29.1") //версия Allure JUnit5 (https://github.com/allure-framework/allure-java)
            }
        }
    }
}

dependencies {
    testImplementation (
            "com.codeborne:selenide:7.5.1",
            "org.junit.jupiter:junit-jupiter:5.10.0",
            'org.slf4j:slf4j-simple:2.0.7',
            'com.github.javafaker:javafaker:1.0.2')
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test){
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task registration_tests(type:Test){
    useJUnitPlatform(){
        includeTags("registration")
    }
}

test {
    useJUnitPlatform {
        if (project.hasProperty("includeTags")) {
            includeTags(project.property("includeTags") as String)
        }
    }
}